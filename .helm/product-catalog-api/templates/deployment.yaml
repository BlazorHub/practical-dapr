{{- $name := include "product-catalog.fullname" . -}}
{{- $cfgname := printf "%s-%s" "cfg" $name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "product-catalog.fullname" . }}
  labels:
    app: {{ template "product-catalog.name" . }}
    chart: {{ template "product-catalog.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "product-catalog.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "product-catalog.name" . }}
        release: {{ .Release.Name }}
      annotations:
        dapr.io/enabled: "true"
        dapr.io/id: product-catalog-api
        dapr.io/port: "5201"
        dapr.io/config: "tracing"
        dapr.io/log-level: "debug"
    spec:
      {{ if .Values.imagePullSecrets -}}
      imagePullSecrets:
      {{ range .Values.imagePullSecrets -}}
        - name: {{ .name }}
      {{- end -}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.env.values -}}
          {{- range .Values.env.values }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end -}}
          {{- end -}}
          # {{- if .Values.env.configmap -}}
          # {{- range .Values.env.configmap }}
          #   - name: {{ .name }}
          #     valueFrom:
          #       configMapKeyRef:
          #         name: {{ $cfgname }}
          #         key: {{ .name }}
          # {{- end -}}
          # {{- end }}
          ports:
            - name: apphttp
              containerPort: 5201
              protocol: TCP
            - name: http
              containerPort: 5202
              protocol: TCP
          # {{ if .Values.probes -}}
          # {{- if .Values.probes.liveness -}}
          # livenessProbe:
          #   httpGet:
          #     port: {{ .Values.probes.liveness.port }}
          #     path: {{ .Values.probes.liveness.path }}
          #   initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          # {{- end -}}
          # {{- end -}}
          # {{- if .Values.probes -}}
          # {{- if .Values.probes.readiness }}
          # readinessProbe:
          #   httpGet:
          #     port: {{ .Values.probes.readiness.port }}
          #     path: {{ .Values.probes.readiness.path }}
          #   initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          #   timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          # {{- end -}}
          # {{- end }}
#           resources:
# {{ toYaml .Values.resources | indent 12 }}
#     {{- with .Values.nodeSelector }}
#       nodeSelector:
# {{ toYaml . | indent 8 }}
#     {{- end }}
#     {{- with .Values.affinity }}
#       affinity:
# {{ toYaml . | indent 8 }}
#     {{- end }}
#     {{- with .Values.tolerations }}
#       tolerations:
# {{ toYaml . | indent 8 }}
#     {{- end }}

